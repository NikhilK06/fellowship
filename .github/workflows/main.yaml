name: Deploy AWS Infrastructure
on:
  push:
    branches:
      - main
      - Staging
  workflow_dispatch:
    inputs:
      action:
        description: 'Select deploy and destroy action'
        required: true
        type: choice
        options:
          - deploy-region1
          - deploy-region2
          - destroy-region1
          - destroy-region2

jobs:
  deploy-region1:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'deploy-region1'
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Staging' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ github.ref == 'refs/heads/main' && secrets.AWS_ACCESS_KEY_ID_PROD || secrets.AWS_ACCESS_KEY_ID_STAGING }}
          aws-secret-access-key: ${{ github.ref == 'refs/heads/main' && secrets.AWS_SECRET_ACCESS_KEY_PROD || secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
          aws-region: ap-south-1

      - name: Debug AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID"
          echo "AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:0:4}********"

      - name: Deploy to AWS Region 1
        run: |
          cd aws_region1
          terraform init
          terraform plan
          terraform apply -auto-approve

  deploy-region2:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'deploy-region2'
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Staging' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ github.ref == 'refs/heads/main' && secrets.AWS_ACCESS_KEY_ID_PROD || secrets.AWS_ACCESS_KEY_ID_STAGING }}
          aws-secret-access-key: ${{ github.ref == 'refs/heads/main' && secrets.AWS_SECRET_ACCESS_KEY_PROD || secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
          aws-region: ap-southeast-1
 
      - name: Debug AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID"
          echo "AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:0:4}********"

      - name: Deploy to AWS Region 2
        run: |
          cd aws_region2
          terraform init
          terraform plan
          terraform apply -auto-approve

  destroy-region1:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy-region1'
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Staging' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ github.ref == 'refs/heads/main' && secrets.AWS_ACCESS_KEY_ID_PROD || secrets.AWS_ACCESS_KEY_ID_STAGING }}
          aws-secret-access-key: ${{ github.ref == 'refs/heads/main' && secrets.AWS_SECRET_ACCESS_KEY_PROD || secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
          aws-region: ap-south-1
 
      - name: Debug AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID"
          echo "AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:0:4}********"

      - name: Destroy AWS Region 1
        run: |
          cd aws_region1
          terraform init
          terraform plan -destroy -out=tfplan
          terraform destroy -auto-approve

  destroy-region2:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy-region2'
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Staging' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ github.ref == 'refs/heads/main' && secrets.AWS_ACCESS_KEY_ID_PROD || secrets.AWS_ACCESS_KEY_ID_STAGING }}
          aws-secret-access-key: ${{ github.ref == 'refs/heads/main' && secrets.AWS_SECRET_ACCESS_KEY_PROD || secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
          aws-region: ap-southeast-1
 
      - name: Debug AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID"
          echo "AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:0:4}********"

      - name: Destroy AWS Region 2
        run: |
          cd aws_region2
          terraform init
          terraform plan -destroy -out=tfplan
          terraform destroy -auto-approve
